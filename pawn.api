@receivepacket(const packet[], size, const source[])
@receivestring(const message[], const source[])
AddMenuItem(Menu:menuid, column, const menutext[])
AddPlayerClass(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)
AddPlayerClassEx(teamid, modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)
AddStaticPickup(model, type, Float:X, Float:Y, Float:Z, virtualworld = 0)
AddStaticVehicle(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, color1, color2)
AddStaticVehicleEx(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, color1, color2, respawn_delay)
AddVehicleComponent(vehicleid, componentid)
AllowAdminTeleport(allow)
AllowInteriorWeapons(allow)
AllowPlayerTeleport(playerid, allow)
ApplyAnimation(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync = 0)
Attach3DTextLabelToPlayer(Text3D:id, playerid, Float:OffsetX, Float:OffsetY, Float:OffsetZ)
Attach3DTextLabelToVehicle(Text3D:id, vehicleid, Float:OffsetX, Float:OffsetY, Float:OffsetZ)
AttachCameraToDynamicObject(playerid, objectid)
AttachCameraToObject(playerid, objectid)
AttachCameraToPlayerObject(playerid, playerobjectid)
AttachDynamicAreaToObject(areaid, objectid, type = STREAMER_OBJECT_TYPE_DYNAMIC, playerid = INVALID_PLAYER_ID)
AttachDynamicAreaToPlayer(areaid, playerid)
AttachDynamicAreaToVehicle(areaid, vehicleid)
AttachDynamicObjectToVehicle(objectid, vehicleid, Float:offsetx, Float:offsety, Float:offsetz, Float:rx, Float:ry, Float:rz)
AttachObjectToObject(objectid, attachtoid, Float:OffsetX, Float:OffsetY, Float:OffsetZ, Float:RotX, Float:RotY, Float:RotZ, SyncRotation = 1)
AttachObjectToPlayer(objectid, playerid, Float:OffsetX, Float:OffsetY, Float:OffsetZ, Float:RotX, Float:RotY, Float:RotZ)
AttachObjectToVehicle(objectid, vehicleid, Float:OffsetX, Float:OffsetY, Float:OffsetZ, Float:RotX, Float:RotY, Float:RotZ)
AttachPlayerObjectToPlayer(objectplayer, objectid, attachplayer, Float:OffsetX, Float:OffsetY, Float:OffsetZ, Float:rX, Float:rY, Float:rZ)
AttachPlayerObjectToVehicle(playerid, objectid, vehicleid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:RotZ)
AttachTrailerToVehicle(trailerid, vehicleid)
Ban(playerid)
BanEx(playerid, const reason[])
BlockIpAddress(ip_address[], timems)
CallLocalFunction(const function[], const format[], {Float,_}:...)
CallRemoteFunction(const function[], const format[], {Float,_}:...)
CancelEdit(playerid)
CancelSelectTextDraw(playerid)
ChangeVehicleColor(vehicleid, color1, color2)
ChangeVehiclePaintjob(vehicleid, paintjobid)
ClearAnimations(playerid, forcesync = 0)
ConnectNPC(name[], script[])
CountDynamic3DTextLabels()
CountDynamicAreas()
CountDynamicCPs()
CountDynamicMapIcons()
CountDynamicObjects()
CountDynamicPickups()
CountDynamicRaceCPs()
Create3DTextLabel(text[], color, Float:X, Float:Y, Float:Z, Float:DrawDistance, virtualworld, testLOS=0)
CreateDynamic3DTextLabel(const text[], color, Float:x, Float:y, Float:z, Float:drawdistance, attachedplayer = INVALID_PLAYER_ID, attachedvehicle = INVALID_VEHICLE_ID, testlos = 0, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 100.0)
CreateDynamic3DTextLabelEx(const text[], color, Float:x, Float:y, Float:z, Float:drawdistance, attachedplayer = INVALID_PLAYER_ID, attachedvehicle = INVALID_VEHICLE_ID, testlos = 0, Float:streamdistance = 100.0, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicCP(Float:x, Float:y, Float:z, Float:size, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 100.0)
CreateDynamicCPEx(Float:x, Float:y, Float:z, Float:size, Float:streamdistance = 100.0, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicCircle(Float:x, Float:y, Float:size, worldid = -1, interiorid = -1, playerid = -1)
CreateDynamicCircleEx(Float:x, Float:y, Float:size, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicCube(Float:minx, Float:miny, Float:minz, Float:maxx, Float:maxy, Float:maxz, worldid = -1, interiorid = -1, playerid = -1)
CreateDynamicCubeEx(Float:minx, Float:miny, Float:minz, Float:maxx, Float:maxy, Float:maxz, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicMapIcon(Float:x, Float:y, Float:z, type, color, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 100.0)
CreateDynamicMapIconEx(Float:x, Float:y, Float:z, type, color, style = MAPICON_LOCAL, Float:streamdistance = 100.0, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicObject(modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 300.0)
CreateDynamicObjectEx(modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz, Float:drawdistance = 0.0, Float:streamdistance = 200.0, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicPickup(modelid, type, Float:x, Float:y, Float:z, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 100.0)
CreateDynamicPickupEx(modelid, type, Float:x, Float:y, Float:z, Float:streamdistance = 100.0, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicPolygon(Float:points[], Float:minz = -FLOAT_INFINITY, Float:maxz = FLOAT_INFINITY, maxpoints = sizeof points, worldid = -1, interiorid = -1, playerid = -1)
CreateDynamicPolygonEx(Float:points[], Float:minz = -FLOAT_INFINITY, Float:maxz = FLOAT_INFINITY, maxpoints = sizeof points, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicRaceCP(type, Float:x, Float:y, Float:z, Float:nextx, Float:nexty, Float:nextz, Float:size, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 100.0)
CreateDynamicRaceCPEx(type, Float:x, Float:y, Float:z, Float:nextx, Float:nexty, Float:nextz, Float:size, Float:streamdistance = 100.0, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicRectangle(Float:minx, Float:miny, Float:maxx, Float:maxy, worldid = -1, interiorid = -1, playerid = -1)
CreateDynamicRectangleEx(Float:minx, Float:miny, Float:maxx, Float:maxy, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicSphere(Float:x, Float:y, Float:z, Float:size, worldid = -1, interiorid = -1, playerid = -1)
CreateDynamicSphereEx(Float:x, Float:y, Float:z, Float:size, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateExplosion(Float:X, Float:Y, Float:Z, type, Float:Radius)
CreateExplosionForPlayer(playerid, Float:X, Float:Y, Float:Z, type, Float:Radius)
CreateMenu(const title[], columns, Float:x, Float:y, Float:col1width, Float:col2width = 0.0)
CreateObject(modelid, Float:X, Float:Y, Float:Z, Float:rX, Float:rY, Float:rZ, Float:DrawDistance = 0.0)
CreatePickup(model, type, Float:X, Float:Y, Float:Z, virtualworld = 0)
CreatePlayer3DTextLabel(playerid, text[], color, Float:X, Float:Y, Float:Z, Float:DrawDistance, attachedplayer=INVALID_PLAYER_ID, attachedvehicle=INVALID_VEHICLE_ID, testLOS=0)
CreatePlayerObject(playerid, modelid, Float:X, Float:Y, Float:Z, Float:rX, Float:rY, Float:rZ, Float:DrawDistance = 0.0)
CreatePlayerTextDraw(playerid, Float:x, Float:y, text[])
CreateVehicle(vehicletype, Float:x, Float:y, Float:z, Float:rotation, color1, color2, respawn_delay)
Delete3DTextLabel(Text3D:id)
DeletePVar(playerid, varname[])
DeletePlayer3DTextLabel(playerid, PlayerText3D:id)
DestroyAllDynamic3DTextLabels()
DestroyAllDynamicAreas()
DestroyAllDynamicCPs()
DestroyAllDynamicMapIcons()
DestroyAllDynamicObjects()
DestroyAllDynamicPickups()
DestroyAllDynamicRaceCPs()
DestroyDynamic3DTextLabel(Text3D:id)
DestroyDynamicArea(areaid)
DestroyDynamicCP(checkpointid)
DestroyDynamicMapIcon(iconid)
DestroyDynamicObject(objectid)
DestroyDynamicPickup(pickupid)
DestroyDynamicRaceCP(checkpointid)
DestroyMenu(Menu:menuid)
DestroyObject(objectid)
DestroyPickup(pickup)
DestroyPlayerObject(playerid, objectid)
DestroyVehicle(vehicleid)
DetachTrailerFromVehicle(vehicleid)
DisableInteriorEnterExits()
DisableMenu(Menu:menuid)
DisableMenuRow(Menu:menuid, row)
DisableNameTagLOS()
DisablePlayerCheckpoint(playerid)
DisablePlayerRaceCheckpoint(playerid)
EditAttachedObject(playerid, index)
EditDynamicObject(playerid, objectid)
EditObject(playerid, objectid)
EditPlayerObject(playerid, objectid)
EnableStuntBonusForAll(enable)
EnableStuntBonusForPlayer(playerid, enable)
EnableTirePopping(enable)
EnableVehicleFriendlyFire()
EnableZoneNames(enable)
ForceClassSelection(playerid)
GameModeExit()
GameTextForAll(const string[],time,style)
GameTextForPlayer(playerid,const string[],time,style)
GangZoneCreate(Float:minx, Float:miny, Float:maxx, Float:maxy)
GangZoneDestroy(zone)
GangZoneFlashForAll(zone, flashcolor)
GangZoneFlashForPlayer(playerid, zone, flashcolor)
GangZoneHideForAll(zone)
GangZoneHideForPlayer(playerid, zone)
GangZoneShowForAll(zone, color)
GangZoneShowForPlayer(playerid, zone, color)
GangZoneStopFlashForAll(zone)
GangZoneStopFlashForPlayer(playerid, zone)
GetAnimationName(index, animlib[], len1, animname[], len2)
GetDistanceFromMeToPoint(Float:X, Float:Y, Float:Z, &Float:Distance)
GetDynamic3DTextLabelText(Text3D:id, text[], maxlength = sizeof text)
GetDynamicObjectMaterial(objectid, materialindex, &modelid, txdname[], texturename[], &materialcolor, maxtxdname = sizeof txdname, maxtexturename = sizeof texturename)
GetDynamicObjectMaterialText(objectid, materialindex, text[], &materialsize, fontface[], &fontsize, &bold, &fontcolor, &backcolor, &textalignment, maxtext = sizeof text, maxfontface = sizeof fontface)
GetDynamicObjectPos(objectid, &Float:x, &Float:y, &Float:z)
GetDynamicObjectRot(objectid, &Float:rx, &Float:ry, &Float:rz)
GetMaxPlayers()
GetMyFacingAngle(&Float:ang)
GetMyPos(&Float:x, &Float:y, &Float:z)
GetNetworkStats(retstr[], retstr_size)
GetObjectPos(objectid, &Float:X, &Float:Y, &Float:Z)
GetObjectRot(objectid, &Float:RotX, &Float:RotY, &Float:RotZ)
GetPVarFloat(playerid, varname[])
GetPVarInt(playerid, varname[])
GetPVarNameAtIndex(playerid, index, ret_varname[], ret_len)
GetPVarString(playerid, varname[], string_return[], len)
GetPVarType(playerid, varname[])
GetPVarsUpperIndex(playerid)
GetPlayerAmmo(playerid)
GetPlayerAnimationIndex(playerid)
GetPlayerArmedWeapon(playerid)
GetPlayerArmour(playerid)
GetPlayerArmour(playerid, &Float:armour)
GetPlayerCameraAspectRatio(playerid)
GetPlayerCameraFrontVector(playerid, &Float:x, &Float:y, &Float:z)
GetPlayerCameraMode(playerid)
GetPlayerCameraPos(playerid, &Float:x, &Float:y, &Float:z)
GetPlayerCameraZoom(playerid)
GetPlayerColor(playerid)
GetPlayerDistanceFromPoint(playerid, Float:X, Float:Y, Float:Z)
GetPlayerDrunkLevel(playerid)
GetPlayerFacingAngle(playerid, &Float:ang)
GetPlayerFacingAngle(playerid,&Float:ang)
GetPlayerFightingStyle(playerid)
GetPlayerHealth(playerid)
GetPlayerHealth(playerid, &Float:health)
GetPlayerInterior(playerid)
GetPlayerIp(playerid, name[], len)
GetPlayerKeys(playerid, &keys, &updown, &leftright)
GetPlayerKeys(playerid, &keys, &updown, &leftright)
GetPlayerLastShotVectors(playerid, &Float:fOriginX, &Float:fOriginY, &Float:fOriginZ, &Float:fHitPosX, &Float:fHitPosY, &Float:fHitPosZ)
GetPlayerMenu(playerid)
GetPlayerMoney(playerid)
GetPlayerName(playerid, const name[], len)
GetPlayerName(playerid, const name[], len)
GetPlayerNetworkStats(playerid, retstr[], retstr_size)
GetPlayerObjectPos(playerid, objectid, &Float:X, &Float:Y, &Float:Z)
GetPlayerObjectRot(playerid, objectid, &Float:RotX, &Float:RotY, &Float:RotZ)
GetPlayerPing(playerid)
GetPlayerPos(playerid, &Float:x, &Float:y, &Float:z)
GetPlayerPos(playerid, &Float:x, &Float:y, &Float:z)
GetPlayerScore(playerid)
GetPlayerSkin(playerid)
GetPlayerSpecialAction(playerid)
GetPlayerSpecialAction(playerid)
GetPlayerState(playerid)
GetPlayerState(playerid)
GetPlayerSurfingObjectID(playerid)
GetPlayerSurfingVehicleID(playerid)
GetPlayerTargetPlayer(playerid)
GetPlayerTeam(playerid)
GetPlayerTime(playerid, &hour, &minute)
GetPlayerVehicleID(playerid)
GetPlayerVehicleID(playerid)
GetPlayerVehicleSeat(playerid)
GetPlayerVelocity( playerid, &Float:X, &Float:Y, &Float:Z )
GetPlayerVersion(playerid, const version[], len)
GetPlayerVirtualWorld(playerid)
GetPlayerVisibleDynamicCP(playerid)
GetPlayerVisibleDynamicRaceCP(playerid)
GetPlayerWantedLevel(playerid)
GetPlayerWeapon(playerid)
GetPlayerWeaponData(playerid, slot, &weapons, &ammo)
GetPlayerWeaponState(playerid)
GetServerTickRate()
GetServerVarAsBool(const varname[])
GetServerVarAsInt(const varname[])
GetServerVarAsString(const varname[], buffer[], len)
GetTickCount()
GetTickCount()
GetVehicleComponentInSlot(vehicleid, slot)
GetVehicleComponentType(component)
GetVehicleDamageStatus(vehicleid, &panels, &doors, &lights, &tires)
GetVehicleDistanceFromPoint(vehicleid, Float:X, Float:Y, Float:Z)
GetVehicleHealth(vehicleid, &Float:health)
GetVehicleModel(vehicleid)
GetVehicleModelInfo(vehiclemodel, infotype, &Float:X, &Float:Y, &Float:Z)
GetVehicleParamsEx(vehicleid, &engine, &lights, &alarm, &doors, &bonnet, &boot, &objective)
GetVehiclePos(vehicleid, &Float:x, &Float:y, &Float:z)
GetVehicleRotationQuat(vehicleid, &Float:w, &Float:x, &Float:y, &Float:z)
GetVehicleTrailer(vehicleid)
GetVehicleVelocity(vehicleid, &Float:X, &Float:Y, &Float:Z)
GetVehicleVirtualWorld(vehicleid)
GetVehicleZAngle(vehicleid, &Float:z_angle)
GetWeaponName(weaponid, const weapon[], len)
GivePlayerMoney(playerid,money)
GivePlayerWeapon(playerid, weaponid, ammo)
HTTP(index, type, url[], data[], callback[])
HideMenuForPlayer(Menu:menuid, playerid)
InterpolateCameraLookAt(playerid, Float:FromX, Float:FromY, Float:FromZ, Float:ToX, Float:ToY, Float:ToZ, time, cut = CAMERA_CUT)
InterpolateCameraPos(playerid, Float:FromX, Float:FromY, Float:FromZ, Float:ToX, Float:ToY, Float:ToZ, time, cut = CAMERA_CUT)
IsDynamicObjectMoving(objectid)
IsObjectMoving(objectid)
IsPlayerAdmin(playerid)
IsPlayerAttachedObjectSlotUsed(playerid, index)
IsPlayerConnected(playerid)
IsPlayerConnected(playerid)
IsPlayerInAnyDynamicArea(playerid)
IsPlayerInAnyVehicle(playerid)
IsPlayerInCheckpoint(playerid)
IsPlayerInDynamicArea(playerid, areaid)
IsPlayerInDynamicCP(playerid, checkpointid)
IsPlayerInDynamicRaceCP(playerid, checkpointid)
IsPlayerInRaceCheckpoint(playerid)
IsPlayerInRangeOfPoint(playerid, Float:range, Float:X, Float:Y, Float:Z)
IsPlayerInRangeOfPoint(playerid, Float:range, Float:x, Float:y, Float:z)
IsPlayerInVehicle(playerid, vehicleid)
IsPlayerNPC(playerid)
IsPlayerObjectMoving(playerid, objectid)
IsPlayerStreamedIn(playerid)
IsPlayerStreamedIn(playerid, forplayerid)
IsPointInAnyDynamicArea(Float:x, Float:y, Float:z)
IsPointInDynamicArea(areaid, Float:x, Float:y, Float:z)
IsTrailerAttachedToVehicle(vehicleid)
IsValidDynamic3DTextLabel(Text3D:id)
IsValidDynamicArea(areaid)
IsValidDynamicCP(checkpointid)
IsValidDynamicMapIcon(iconid)
IsValidDynamicObject(objectid)
IsValidDynamicPickup(pickupid)
IsValidDynamicRaceCP(checkpointid)
IsValidMenu(Menu:menuid)
IsValidObject(objectid)
IsValidPlayerObject(playerid, objectid)
IsVehicleStreamedIn(vehicleid)
IsVehicleStreamedIn(vehicleid, forplayerid)
Kick(playerid)
KillTimer(timerid)
KillTimer(timerid)
LimitGlobalChatRadius(Float:chat_radius)
LimitPlayerMarkerRadius(Float:marker_radius)
LinkVehicleToInterior(vehicleid, interiorid)
ManualVehicleEngineAndLights()
MoveDynamicObject(objectid, Float:x, Float:y, Float:z, Float:speed, Float:rx = -1000.0, Float:ry = -1000.0, Float:rz = -1000.0)
MoveObject(objectid, Float:X, Float:Y, Float:Z, Float:Speed, Float:RotX = -1000.0, Float:RotY = -1000.0, Float:RotZ = -1000.0)
MovePlayerObject(playerid, objectid, Float:X, Float:Y, Float:Z, Float:Speed, Float:RotX = -1000.0, Float:RotY = -1000.0, Float:RotZ = -1000.0)
NetStats_BytesReceived(playerid)
NetStats_BytesSent(playerid)
NetStats_ConnectionStatus(playerid)
NetStats_GetConnectedTime(playerid)
NetStats_GetIpPort(playerid, ip_port[], ip_port_len)
NetStats_MessagesReceived(playerid)
NetStats_MessagesRecvPerSecond(playerid)
NetStats_MessagesSent(playerid)
NetStats_PacketLossPercent(playerid)
OnClientMessage(color, text[])
OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
OnDynamicObjectMoved(objectid)
OnEnterExitModShop(playerid, enterexit, interiorid)
OnFilterScriptExit()
OnFilterScriptInit()
OnGameModeExit()
OnGameModeInit()
OnIncomingConnection(playerid, ip_address[], port)
OnNPCConnect(myplayerid)
OnNPCDisconnect(reason[])
OnNPCEnterVehicle(vehicleid, seatid)
OnNPCExitVehicle()
OnNPCModeExit()
OnNPCModeInit()
OnNPCSpawn()
OnObjectMoved(objectid)
OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
OnPlayerClickPlayer(playerid, clickedplayerid, source)
OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
OnPlayerClickTextDraw(playerid, Text:clickedid)
OnPlayerCommandText(playerid, cmdtext[])
OnPlayerConnect(playerid)
OnPlayerDeath(playerid)
OnPlayerDeath(playerid, killerid, reason)
OnPlayerDisconnect(playerid, reason)
OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
OnPlayerEnterCheckpoint(playerid)
OnPlayerEnterDynamicArea(playerid, areaid)
OnPlayerEnterDynamicCP(playerid, checkpointid)
OnPlayerEnterDynamicRaceCP(playerid, checkpointid)
OnPlayerEnterRaceCheckpoint(playerid)
OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
OnPlayerExitVehicle(playerid, vehicleid)
OnPlayerExitedMenu(playerid)
OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
OnPlayerLeaveCheckpoint(playerid)
OnPlayerLeaveDynamicArea(playerid, areaid)
OnPlayerLeaveDynamicCP(playerid, checkpointid)
OnPlayerLeaveDynamicRaceCP(playerid, checkpointid)
OnPlayerLeaveRaceCheckpoint(playerid)
OnPlayerObjectMoved(playerid, objectid)
OnPlayerPickUpDynamicPickup(playerid, pickupid)
OnPlayerPickUpPickup(playerid, pickupid)
OnPlayerRequestClass(playerid, classid)
OnPlayerRequestSpawn(playerid)
OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z)
OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
OnPlayerSelectedMenuRow(playerid, row)
OnPlayerSpawn(playerid)
OnPlayerStateChange(playerid, newstate, oldstate)
OnPlayerStreamIn(playerid)
OnPlayerStreamIn(playerid, forplayerid)
OnPlayerStreamOut(playerid)
OnPlayerStreamOut(playerid, forplayerid)
OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
OnPlayerText(playerid, text[])
OnPlayerText(playerid, text[])
OnPlayerUpdate(playerid)
OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
OnRconCommand(cmd[])
OnRconLoginAttempt( ip[], password[], success )
OnRecordingPlaybackEnd()
OnTrailerUpdate(playerid, vehicleid)
OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
OnVehicleDamageStatusUpdate(vehicleid, playerid)
OnVehicleDeath(vehicleid, killerid)
OnVehicleMod(playerid, vehicleid, componentid)
OnVehiclePaintjob(playerid, vehicleid, paintjobid)
OnVehicleRespray(playerid, vehicleid, color1, color2)
OnVehicleSpawn(vehicleid)
OnVehicleStreamIn(vehicleid)
OnVehicleStreamIn(vehicleid, forplayerid)
OnVehicleStreamOut(vehicleid)
OnVehicleStreamOut(vehicleid, forplayerid)
PauseRecordingPlayback()
PlayAudioStreamForPlayer(playerid, url[], Float:posX = 0.0, Float:posY = 0.0, Float:posZ = 0.0, Float:distance = 50.0, usepos = 0)
PlayCrimeReportForPlayer(playerid, suspectid, crime)
PlayerPlaySound(playerid, soundid, Float:x, Float:y, Float:z)
PlayerSpectatePlayer(playerid, targetplayerid, mode = SPECTATE_MODE_NORMAL)
PlayerSpectateVehicle(playerid, targetvehicleid, mode = SPECTATE_MODE_NORMAL)
PlayerTextDrawAlignment(playerid, PlayerText:text, alignment)
PlayerTextDrawBackgroundColor(playerid, PlayerText:text, color)
PlayerTextDrawBoxColor(playerid, PlayerText:text, color)
PlayerTextDrawColor(playerid, PlayerText:text, color)
PlayerTextDrawDestroy(playerid, PlayerText:text)
PlayerTextDrawFont(playerid, PlayerText:text, font)
PlayerTextDrawHide(playerid, PlayerText:text)
PlayerTextDrawLetterSize(playerid, PlayerText:text, Float:x, Float:y)
PlayerTextDrawSetOutline(playerid, PlayerText:text, size)
PlayerTextDrawSetPreviewModel(playerid, PlayerText:text, modelindex)
PlayerTextDrawSetPreviewRot(playerid, PlayerText:text, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fZoom = 1.0)
PlayerTextDrawSetPreviewVehCol(playerid, PlayerText:text, color1, color2)
PlayerTextDrawSetProportional(playerid, PlayerText:text, set)
PlayerTextDrawSetSelectable(playerid, PlayerText:text, set)
PlayerTextDrawSetShadow(playerid, PlayerText:text, size)
PlayerTextDrawSetString(playerid, PlayerText:text, string[])
PlayerTextDrawShow(playerid, PlayerText:text)
PlayerTextDrawTextSize(playerid, PlayerText:text, Float:x, Float:y)
PlayerTextDrawUseBox(playerid, PlayerText:text, use)
PutPlayerInVehicle(playerid, vehicleid, seatid)
RemoveBuildingForPlayer(playerid, modelid, Float:fX, Float:fY, Float:fZ, Float:fRadius)
RemovePlayerAttachedObject(playerid, index)
RemovePlayerFromVehicle(playerid)
RemovePlayerMapIcon(playerid, iconid)
RemoveVehicleComponent(vehicleid, componentid)
RepairVehicle(vehicleid)
ResetPlayerMoney(playerid)
ResetPlayerWeapons(playerid)
ResumeRecordingPlayback()
SelectObject(playerid)
SelectTextDraw(playerid, hovercolor)
SendChat(msg[])
SendClientMessage(playerid, color, const message[])
SendClientMessageToAll(color, const message[])
SendCommand(commandtext[])
SendDeathMessage(killer, killee, weapon)
SendDeathMessageToPlayer(playerid, killer, killee, weapon)
SendPlayerMessageToAll(senderid, const message[])
SendPlayerMessageToPlayer(playerid, senderid, const message[])
SendRconCommand(command[])
SetCameraBehindPlayer(playerid)
SetDeathDropAmount(amount)
SetDynamicObjectMaterial(objectid, materialindex, modelid, const txdname[], const texturename[], materialcolor = 0)
SetDynamicObjectMaterialText(objectid, materialindex, const text[], materialsize = OBJECT_MATERIAL_SIZE_256x128, const fontface[] = "Arial", fontsize = 24, bold = 1, fontcolor = 0xFFFFFFFF, backcolor = 0, textalignment = 0)
SetDynamicObjectPos(objectid, Float:x, Float:y, Float:z)
SetDynamicObjectRot(objectid, Float:rx, Float:ry, Float:rz)
SetGameModeText(const string[])
SetGravity(Float:gravity)
SetMenuColumnHeader(Menu:menuid, column, const columnheader[])
SetMyFacingAngle(Float:ang)
SetMyPos(Float:x, Float:y, Float:z)
SetNameTagDrawDistance(Float:distance)
SetObjectMaterial(objectid, materialindex, modelid, txdname[], texturename[], materialcolor=0)
SetObjectMaterialText(objectid, text[], materialindex = 0, materialsize = OBJECT_MATERIAL_SIZE_256x128, fontface[] = "Arial", fontsize = 24, bold = 1, fontcolor = 0xFFFFFFFF, backcolor = 0, textalignment = 0)
SetObjectPos(objectid, Float:X, Float:Y, Float:Z)
SetObjectRot(objectid, Float:RotX, Float:RotY, Float:RotZ)
SetPVarFloat(playerid, varname[], Float:float_value)
SetPVarInt(playerid, varname[], int_value)
SetPVarString(playerid, varname[], string_value[])
SetPlayerAmmo(playerid, weaponslot, ammo)
SetPlayerArmedWeapon(playerid, weaponid)
SetPlayerArmour(playerid, Float:armour)
SetPlayerAttachedObject(playerid, index, modelid, bone, Float:fOffsetX = 0.0, Float:fOffsetY = 0.0, Float:fOffsetZ = 0.0, Float:fRotX = 0.0, Float:fRotY = 0.0, Float:fRotZ = 0.0, Float:fScaleX = 1.0, Float:fScaleY = 1.0, Float:fScaleZ = 1.0, materialcolor1 = 0, materialcolor2 = 0)
SetPlayerCameraLookAt(playerid, Float:x, Float:y, Float:z, cut = CAMERA_CUT)
SetPlayerCameraPos(playerid,Float:x, Float:y, Float:z)
SetPlayerChatBubble(playerid, text[], color, Float:drawdistance, expiretime)
SetPlayerCheckpoint(playerid, Float:x, Float:y, Float:z, Float:size)
SetPlayerColor(playerid,color)
SetPlayerDrunkLevel(playerid, level)
SetPlayerFacingAngle(playerid,Float:ang)
SetPlayerFightingStyle(playerid, style)
SetPlayerHealth(playerid, Float:health)
SetPlayerInterior(playerid,interiorid)
SetPlayerMapIcon(playerid, iconid, Float:x, Float:y, Float:z, markertype, color, style = MAPICON_LOCAL)
SetPlayerMarkerForPlayer(playerid, showplayerid, color)
SetPlayerName(playerid, const name[])
SetPlayerObjectMaterial(playerid, objectid, materialindex, modelid, txdname[], texturename[], materialcolor=0)
SetPlayerObjectMaterialText(playerid, objectid, text[], materialindex = 0, materialsize = OBJECT_MATERIAL_SIZE_256x128, fontface[] = "Arial", fontsize = 24, bold = 1, fontcolor = 0xFFFFFFFF, backcolor = 0, textalignment = 0)
SetPlayerObjectPos(playerid, objectid, Float:X, Float:Y, Float:Z)
SetPlayerObjectRot(playerid, objectid, Float:RotX, Float:RotY, Float:RotZ)
SetPlayerPos(playerid, Float:x, Float:y, Float:z)
SetPlayerPosFindZ(playerid, Float:x, Float:y, Float:z)
SetPlayerRaceCheckpoint(playerid, type, Float:x, Float:y, Float:z, Float:nextx, Float:nexty, Float:nextz, Float:size)
SetPlayerScore(playerid,score)
SetPlayerShopName(playerid, shopname[])
SetPlayerSkillLevel(playerid, skill, level)
SetPlayerSkin(playerid, skinid)
SetPlayerSpecialAction(playerid,actionid)
SetPlayerTeam(playerid, teamid)
SetPlayerTime(playerid, hour, minute)
SetPlayerVelocity(playerid, Float:X, Float:Y, Float:Z)
SetPlayerVirtualWorld(playerid, worldid)
SetPlayerWantedLevel(playerid, level)
SetPlayerWeather(playerid, weather)
SetPlayerWorldBounds(playerid,Float:x_max,Float:x_min,Float:y_max,Float:y_min)
SetSpawnInfo(playerid, team, skin, Float:x, Float:y, Float:z, Float:rotation, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)
SetTeamCount(count)
SetTimer(funcname[], interval, repeating)
SetTimer(funcname[], interval, repeating)
SetTimerEx(funcname[], interval, repeating, const format[], {Float,_}:...)
SetVehicleAngularVelocity(vehicleid, Float:X, Float:Y, Float:Z)
SetVehicleHealth(vehicleid, Float:health)
SetVehicleNumberPlate(vehicleid, numberplate[])
SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective)
SetVehicleParamsForPlayer(vehicleid,playerid,objective,doorslocked)
SetVehiclePos(vehicleid, Float:x, Float:y, Float:z)
SetVehicleToRespawn(vehicleid)
SetVehicleVelocity(vehicleid, Float:X, Float:Y, Float:Z)
SetVehicleVirtualWorld(vehicleid, worldid)
SetVehicleZAngle(vehicleid, Float:z_angle)
SetWeather(weatherid)
SetWorldTime(hour)
ShowMenuForPlayer(Menu:menuid, playerid)
ShowNameTags(show)
ShowPlayerDialog(playerid, dialogid, style, caption[], info[], button1[], button2[])
ShowPlayerMarkers(mode)
ShowPlayerNameTagForPlayer(playerid, showplayerid, show)
SpawnPlayer(playerid)
StartRecordingPlayback(playbacktype, recordname[])
StartRecordingPlayerData(playerid, recordtype, recordname[])
StopAudioStreamForPlayer(playerid)
StopDynamicObject(objectid)
StopObject(objectid)
StopPlayerObject(playerid, objectid)
StopRecordingPlayback()
StopRecordingPlayerData(playerid)
Streamer_AppendArrayData(type, {Text3D,_}:id, data, value)
Streamer_CallbackHook(callback, {Float,_}:...)
Streamer_CellDistance(Float:distance)
Streamer_CellSize(Float:size)
Streamer_CountVisibleItems(playerid, type)
Streamer_DestroyAllVisibleItems(playerid, type)
Streamer_GetArrayData(type, {Text3D,_}:id, data, dest[], maxlength = sizeof dest)
Streamer_GetDistanceToItem(Float:x, Float:y, Float:z, type, {Text3D,_}:id, &Float:distance)
Streamer_GetFloatData(type, {Text3D,_}:id, data, &Float:result)
Streamer_GetIntData(type, {Text3D,_}:id, data)
Streamer_GetUpperBound(type)
Streamer_IsInArrayData(type, {Text3D,_}:id, data, value)
Streamer_IsItemVisible(playerid, type, {Text3D,_}:id)
Streamer_MaxItems(type, items)
Streamer_OnFilterScriptInit()
Streamer_OnGameModeInit()
Streamer_OnPlayerConnect(playerid)
Streamer_OnPlayerDisconnect(playerid, reason)
Streamer_OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
Streamer_OnPlayerEnterCP(playerid)
Streamer_OnPlayerEnterRaceCP(playerid)
Streamer_OnPlayerLeaveCP(playerid)
Streamer_OnPlayerLeaveRaceCP(playerid)
Streamer_OnPlayerPickUpPickup(playerid, pickupid)
Streamer_OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
Streamer_ProcessActiveItems()
Streamer_RemoveArrayData(type, {Text3D,_}:id, data, value)
Streamer_SetArrayData(type, {Text3D,_}:id, data, const src[], maxlength = sizeof src)
Streamer_SetFloatData(type, {Text3D,_}:id, data, Float:value)
Streamer_SetIntData(type, {Text3D,_}:id, data, value)
Streamer_TickRate(rate)
Streamer_ToggleIdleUpdate(playerid, toggle)
Streamer_ToggleItemUpdate(playerid, type, toggle)
Streamer_Update(playerid)
Streamer_UpdateEx(playerid, Float:x, Float:y, Float:z, worldid = -1, interiorid = -1)
Streamer_VisibleItems(type, items)
TextDrawAlignment(Text:text, alignment)
TextDrawBackgroundColor(Text:text, color)
TextDrawBoxColor(Text:text, color)
TextDrawColor(Text:text, color)
TextDrawCreate(Float:x, Float:y, text[])
TextDrawDestroy(Text:text)
TextDrawFont(Text:text, font)
TextDrawHideForAll(Text:text)
TextDrawHideForPlayer(playerid, Text:text)
TextDrawLetterSize(Text:text, Float:x, Float:y)
TextDrawSetOutline(Text:text, size)
TextDrawSetPreviewModel(Text:text, modelindex)
TextDrawSetPreviewRot(Text:text, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fZoom = 1.0)
TextDrawSetPreviewVehCol(Text:text, color1, color2)
TextDrawSetProportional(Text:text, set)
TextDrawSetSelectable(Text:text, set)
TextDrawSetShadow(Text:text, size)
TextDrawSetString(Text:text, string[])
TextDrawShowForAll(Text:text)
TextDrawShowForPlayer(playerid, Text:text)
TextDrawTextSize(Text:text, Float:x, Float:y)
TextDrawUseBox(Text:text, use)
TogglePlayerAllDynamicAreas(playerid, toggle)
TogglePlayerAllDynamicCPs(playerid, toggle)
TogglePlayerAllDynamicRaceCPs(playerid, toggle)
TogglePlayerClock(playerid, toggle)
TogglePlayerControllable(playerid, toggle)
TogglePlayerDynamicArea(playerid, areaid, toggle)
TogglePlayerDynamicCP(playerid, checkpointid, toggle)
TogglePlayerDynamicRaceCP(playerid, checkpointid, toggle)
TogglePlayerSpectating(playerid, toggle)
UnBlockIpAddress(ip_address[])
Update3DTextLabelText(Text3D:id, color, text[])
UpdateDynamic3DTextLabelText(Text3D:id, color, const text[])
UpdatePlayer3DTextLabelText(playerid, PlayerText3D:id, color, text[])
UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, tires)
UsePlayerPedAnims()
VectorSize(Float:x, Float:y, Float:z)
acos(Float:value)
acos(Float:value)
asin(Float:value)
asin(Float:value)
atan(Float:value)
atan(Float:value)
atan2(Float:x, Float:y)
atan2(Float:x, Float:y)
clamp(value, min=cellmin, max=cellmax)
db_close(DB:db)
db_field_name(DBResult:dbresult, field, result[], maxlength)
db_free_result(DBResult:dbresult)
db_get_field(DBResult:dbresult, field, result[], maxlength)
db_get_field_assoc(DBResult:dbresult, const field[], result[], maxlength)
db_next_row(DBResult:dbresult)
db_num_fields(DBResult:dbresult)
db_num_rows(DBResult:dbresult)
db_open(name[])
db_query(DB:db,query[])
deleteproperty(id=0, const name[]="", value=cellmin)
existproperty(id=0, const name[]="", value=cellmin)
fblockread(File: handle, buffer[], size = sizeof buffer)
fblockwrite(File: handle, const buffer[], size = sizeof buffer)
fclose(File: handle)
fexist(const pattern[])
fgetchar(File: handle, value, bool: utf8 = true)
flength(File: handle)
float(value)
floatabs(Float:value)
floatadd(Float:oper1, Float:oper2)
floatcmp(Float:oper1, Float:oper2)
floatcos(Float:value, anglemode:mode=radian)
floatdiv(Float:dividend, Float:divisor)
floatfract(Float:value)
floatlog(Float:value, Float:base=10.0)
floatmul(Float:oper1, Float:oper2)
floatpower(Float:value, Float:exponent)
floatround(Float:value, floatround_method:method=floatround_round)
floatsin(Float:value, anglemode:mode=radian)
floatsqroot(Float:value)
floatstr(const string[])
floatsub(Float:oper1, Float:oper2)
floattan(Float:value, anglemode:mode=radian)
fmatch(name[], const pattern[], index = 0, size = sizeof name)
fopen(const name[], filemode: mode = io_readwrite)
format(output[], len, const format[], {Float,_}:...)
format(output[], len, const format[], {Float,_}:...)
fputchar(File: handle, value, bool: utf8 = true)
fread(File: handle, string[], size = sizeof string, bool: pack = false)
fremove(const name[])
fseek(File: handle, position = 0, seek_whence: whence = seek_start)
ftemp()
funcidx(const name[])
fwrite(File: handle, const string[])
getarg(arg, index=0)
getdate(&year=0, &month=0, &day=0)
getproperty(id=0, const name[]="", value=cellmin, string[]="")
gettime(&hour=0, &minute=0, &second=0)
heapspace()
ispacked(const string[])
listenport(port)
max(value1, value2)
memcpy(dest[], const source[], index=0, numbytes, maxlength=sizeof dest)
min(value1, value2)
numargs()
operator%(Float:oper1, Float:oper2)
operator%(Float:oper1, oper2)
operator%(oper1, Float:oper2)
print(const string[])
print(const string[])
printf(const format[], {Float,_}:...)
printf(const format[], {Float,_}:...)
random(max)
sendpacket(const packet[], size, const destination[]="")
sendstring(const message[], const destination[]="")
setarg(arg, index=0, value)
setproperty(id=0, const name[]="", value=cellmin, const string[]="")
strcat(dest[], const source[], maxlength=sizeof dest)
strcmp(const string1[], const string2[], bool:ignorecase=false, length=cellmax)
strdel(string[], start, end)
strfind(const string[], const sub[], bool:ignorecase=false, pos=0)
strins(string[], const substr[], pos, maxlength=sizeof string)
strlen(const string[])
strmid(dest[], const source[], start, end, maxlength=sizeof dest)
strpack(dest[], const source[], maxlength=sizeof dest)
strunpack(dest[], const source[], maxlength=sizeof dest)
strval(const string[])
swapchars(c)
tickcount(&granularity=0)
tolower(c)
toupper(c)
uudecode(dest[], const source[], maxlength=sizeof dest)
uuencode(dest[], const source[], numbytes, maxlength=sizeof dest)
valstr(dest[], value, bool:pack=false)
